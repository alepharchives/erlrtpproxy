#!/bin/sh
#
# This is the init script for starting up the openser-erlrtpproxy interface
#
# chkconfig: - 20 80
# description: Starts and stops openser-erlrtpproxy interface.

### BEGIN INIT INFO
# Provides: erlrtpproxy-ser
# Required-Start: $local_fs $network
# Required-Stop: $local_fs $network
# Should-Start: $remote_fs
# Should-Stop: $remote_fs
# Default-Start:
# Default-Stop: 0 1 2 3 4 5 6
# Short-Description: start and stop openser-interface
# Description: tbd
### END INIT INFO

# Source function library.
. /etc/rc.d/init.d/functions

prog="erlrtpproxy-ser"

[ -e /etc/sysconfig/$prog ] && . /etc/sysconfig/$prog

if [ ! "$CONFIG_FILE" ]; then
	CONFIG_FILE=/etc/$prog.config
fi

if [ ! "$ERL_PARAMETERS" ]; then
	ERL_PARAMETERS="+K true +W w"
fi

if [ ! "$ERL_NODE" ]; then
	ERL_NODE="127.0.0.1"
fi

if [ ! "$ERL_COOKIE" ]; then
	ERL_COOKIE="testcookie"
fi

lockfile=/var/lock/subsys/$prog

start() {
    echo -n $"Starting $prog: "
    daemon --user rtpproxy "erl $ERL_PARAMETERS -name $prog@$ERL_NODE -setcookie $ERL_COOKIE -config $CONFIG_FILE -detached -s ser_app"
    retval=$?
    echo
    [ $retval -eq 0 ] && touch $lockfile
    return $retval
}

stop() {
    echo -n $"Stopping $prog: "
    daemon --user rtpproxy "erl -noinput $ERL_PARAMETERS -name close@$ERL_NODE  -setcookie $ERL_COOKIE  -s ser stop -extra $prog@$ERL_NODE"
    retval=$?
    echo
    [ $retval -eq 0 ] && rm -f $lockfile
    return $retval
}

restart() {
    stop
    start
}

reload() {
    restart
}

force_reload() {
    restart
}

rh_status() {
    /sbin/runuser -s /bin/bash - rtpproxy -c "erl -noinput $ERL_PARAMETERS -name status@$ERL_NODE  -setcookie $ERL_COOKIE  -s ser status -extra $prog@$ERL_NODE"
    return $?
}

rh_status_q() {
    rh_status >/dev/null 2>&1
}


case "$1" in
    start)
        rh_status_q && exit 0
        $1
        ;;
    stop)
#        rh_status_q || exit 0
        $1
        ;;
    restart)
        $1
        ;;
    reload)
        rh_status_q || exit 7
        $1
        ;;
    force-reload)
        force_reload
        ;;
    status)
        rh_status
        ;;
    condrestart|try-restart)
        rh_status_q || exit 0
        restart
        ;;
    *)
        echo $"Usage: $0 {start|stop|status|restart|condrestart|try-restart|reload|force-reload}"
        exit 2
esac
exit $?
