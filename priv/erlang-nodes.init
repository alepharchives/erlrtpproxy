#!/bin/sh
#
# This is the init script for starting up erlang nodes
#
# chkconfig: - 20 80
# description: Starts and stops erlang nodes

### BEGIN INIT INFO
# Provides: erlang-nodes
# Required-Start: $local_fs $network
# Required-Stop: $local_fs $network
# Should-Start: $remote_fs
# Should-Stop: $remote_fs
# Default-Start:
# Default-Stop: 0 1 2 3 4 5 6
# Short-Description: Starts and stops erlang nodes
# Description: This is the init script for starting up erlang nodes
### END INIT INFO

# Source function library.
. /etc/rc.d/init.d/functions

prog="erlang-nodes"

[ -e /etc/sysconfig/$prog ] && . /etc/sysconfig/$prog

if [ ! "$ERL_PARAMETERS" ]; then
	ERL_PARAMETERS="+K true +W w"
fi

if [ ! "$ERL_NODE" ]; then
	ERL_NODE="127.0.0.1"
fi

if [ ! "$ERL_COOKIE" ]; then
	ERL_COOKIE="testcookie"
fi

lockfile=/var/lock/subsys/$prog

start() {
    if [ "$ULIMIT_MAX_FILES" ]; then
	ulimit -n $ULIMIT_MAX_FILES
    fi
    echo -n $"Starting $prog: "
    for nodenum in $NODES
    do
	daemon --user $USER "erl $ERL_PARAMETERS -name 'erlang$nodenum@$ERL_NODE' -setcookie $ERL_COOKIE -detached"
    done
    retval=$?
    echo
    [ $retval -eq 0 ] && touch $lockfile
    return $retval
}

stop() {
	# TODO
    echo -n $"Stopping $prog: (NOT WORKING CURRENTLY - KILL ALL NODES BY HAND) "
#    daemon --user $USER "erl -noinput $ERL_PARAMETERS -name close@$ERL_NODE  -setcookie $ERL_COOKIE  -s ser stop -extra $prog@$ERL_NODE"
    retval=$?
    echo
    [ $retval -eq 0 ] && rm -f $lockfile
    return $retval
}

restart() {
    stop
    start
}

reload() {
    restart
}

force_reload() {
    restart
}

rh_status() {
    # run checks to determine if the service is running or use generic status
    status $prog
}

rh_status_q() {
    rh_status >/dev/null 2>&1
}


case "$1" in
    start)
        rh_status_q && exit 0
        $1
        ;;
    stop)
#        rh_status_q || exit 0
        $1
        ;;
    restart)
        $1
        ;;
    reload)
        rh_status_q || exit 7
        $1
        ;;
    force-reload)
        force_reload
        ;;
    status)
        rh_status
        ;;
    condrestart|try-restart)
        rh_status_q || exit 0
        restart
        ;;
    *)
        echo $"Usage: $0 {start|stop|status|restart|condrestart|try-restart|reload|force-reload}"
        exit 2
esac
exit $?
